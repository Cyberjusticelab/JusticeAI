#!/usr/bin/env bash

# Ensure dependencies are installed
if ! [ -x "$(command -v docker)" ] || ! [ -x "$(command -v docker-compose)" ]; then
  echo "You must install docker and docker-compose to use this script."
fi

# Destroy all containers/images
if [ "$1" == "clean" ]; then
  echo "WARNING: This command is destructive. It removes all containers, images and volumes installed on your local machine."
  read -r -p "Are you SURE you want to continue? [y/N]" clean_confirmation
  if [[ $clean_confirmation =~ ^(y|Y)$ ]]; then

    echo "  >>> Killing all docker containers <<<" && echo "" && docker ps -qa | xargs docker kill && echo ""
    echo "  >>> Removing all stopped containers <<<" && echo "" && docker ps -qa | xargs docker rm -v && echo ""
    echo "  >>> Removing all images <<<" && echo "" && docker images -qa | xargs docker rmi && echo ""

  else
    echo "Clean aborted."
  fi
  exit
fi

# Runs all tests and lints across all services
if [ "$1" == "test" ]; then
  docker-compose -f docker-compose.base.yml -f docker-compose.ci.yml down &&
  docker-compose -f docker-compose.base.yml -f docker-compose.ci.yml build &&
  docker-compose -f docker-compose.base.yml -f docker-compose.ci.yml up -d
  docker-compose -f docker-compose.base.yml -f docker-compose.ci.yml run ml_service
  docker-compose -f docker-compose.base.yml -f docker-compose.ci.yml run nlp_service
  docker-compose -f docker-compose.base.yml -f docker-compose.ci.yml run backend_service
  docker-compose -f docker-compose.base.yml -f docker-compose.ci.yml run web_client
  docker-compose -f docker-compose.base.yml -f docker-compose.ci.yml down
  exit
fi

# Tries to fix all Javascript and Python linting errors for you
if [ "$1" == "lint-fix" ]; then
  if ! [ -x "$(command -v autopep8)" ]; then
    echo "You must install autopep8 to auto-fix Python linting errors. python3 -m pip install autopep8."
  fi
  if ! [ -x "$(command -v npm)" ]; then
    echo "You must install node & npm to install front-end dependencies and auto-fix Javascript linting errors."
  fi

  echo " >> Automatically fixing linting errors <<" && echo ""
  cd ./src/web_client && npm install && npm run lintfix && cd ../.. && autopep8 -aair . && \
  echo "Done!"
  exit
fi





# Choose an environment, default is dev
if [ -z "$COMPOSE_FILE" ]; then
    COMPOSE_FILE='dev'
fi

# Passes script arguments to docker-compose
COMPOSE="docker-compose -f docker-compose.base.yml -f docker-compose.$COMPOSE_FILE.yml $@"
bash -c "$COMPOSE"

